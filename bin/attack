#!/usr/bin/env node

'use strict'

var path = require('path')
var fs = require('fs')
var minimist = require('minimist')
var xtend = require('xtend')

var attack = require('../')

function printUsageAndExit () {
  // TODO
  process.exit(1)
}

function tryReadJsonFile (p, type) {
  var json
  try {
    json = fs.readFileSync(path.resolve(p), 'utf8')
  } catch (e) {
    console.error('Could not read ' + type + ' file!')
    console.error(e)
    printUsageAndExit()
  }
  try {
    return JSON.parse(json)
  } catch (e) {
    console.error('Unable to parse config!')
    console.error(e)
    printUsageAndExit()
  }
}

var argv = minimist(process.argv.slice(2),
  { boolean: [ 'h', 'help' ],
    string: [
      'r', 'routes',
      'c', 'config',
      't', 'type',
      'u', 'url',
      'o', 'output'
    ],
    unknown: function unknown (a) {
      return (a[0] === '-'
        ? (console.error('Unknown option(s): ' + a), printUsageAndExit())
        : true)
    }
})

var routesFile = argv.r || argv.routes

if (!routesFile) {
  console.error('Need to supply routes file via --routes\n.' +
                'Please learn here how to generate it: https://github.com/thlorenz/attack#attackwriteroutesapp-opts')
  printUsageAndExit()
}
var routes = tryReadJsonFile(routesFile, 'routes')

var url = argv.u || argv.url

if (!url) {
  console.error('Need to supply url via --url\n.')
  printUsageAndExit()
}

var resultFile = argv.o || argv.output || path.resolve('results.txt')
var opts = { resultFile: resultFile }

var configFile = argv.c || argv.config
if (configFile) {
  opts = xtend(opts, tryReadJsonFile(configFile, 'config'))
}

var type = argv.t || argv.type || 'ab'
var script
switch (type) {
  case 'ab': {
    script = attack.ab(url, routes, opts.ab)
    break
  }
  case 'siege': {
    var rcFile = attack.siege(url, routes, opts.siege)
    script = 'siege --rc ' + rcFile
    break
  }
  default: {
    console.error('Unknown attack type "' + type + '"!')
    console.error('Known types are "ab", please supply a PR here to add more: https://github.com/thlorenz/attack')
    printUsageAndExit()
  }
}
console.log(script)
